{"version":3,"sources":["App.js","index.js"],"names":["App","useState","calc","setCalc","result","setResult","ops","updateCalc","value","includes","slice","eval","toString","createDigits","digits","i","push","onClick","calculate","deleteLast","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"isBAEA,SAASA,MACP,cAAwBC,oDAAS,IAAjC,8KAAOC,KAAP,cAAaC,QAAb,cACA,WAA4BF,oDAAS,IAArC,+KAAOG,OAAP,cAAeC,UAAf,cAEMC,IAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAE3BC,WAAa,SAAbA,WAAaC,OAKdF,IAAIG,SAASD,QAAmB,KAATN,MACtBI,IAAIG,SAASD,QAAUF,IAAIG,SAASP,KAAKQ,OAAO,MAIpDP,QAAQD,KAAOM,OAEXF,IAAIG,SAASD,QACfH,UAAUM,KAAKT,KAAOM,OAAOI,cAI3BC,aAAe,WAGnB,IAFA,IAAMC,EAAS,GADU,WAGjBC,GACND,EAAOE,KACL,qEAAQC,QAAS,kBAAMV,WAAWQ,EAAEH,aAApC,SAA2DG,GAAJA,KAFnDA,EAAI,EAAGA,EAAI,GAAIA,IAAK,EAApBA,GAMR,OAAOD,GAIHI,UAAY,SAAZA,YACJf,QAAQQ,KAAKT,MAAMU,aAGfO,WAAa,WACjB,GAAY,KAATjB,KAAH,CAEA,IAAMM,EAAQN,KAAKQ,MAAM,GAAI,GAC7BP,QAAQK,KAGV,OACE,kEAAKY,UAAU,MAAf,SACE,mEAAKA,UAAU,aAAf,UACE,mEAAKA,UAAU,UAAf,UACIhB,OAAS,kFAAQA,OAAR,OAA0B,GADvC,OAEIF,MAAQ,OAGZ,mEAAKkB,UAAU,YAAf,UACE,qEAAQH,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eAEA,qEAAQU,QAAUE,WAAlB,oBAGF,mEAAKC,UAAU,SAAf,UACIP,eACF,qEAAQI,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAUC,UAAlB,uBAOKlB,2B,+BC7Ef,iEAKAqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.212ee291.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction App() {\n  const [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  const ops = ['/', '*', '+', '-', '.'];\n\n  const updateCalc = value => {\n\n    //to prevent entering 2 or more operators back-to-back\n    // Ex: 2+/* , true then return\n    // Ex: 2+3 , false then continue\n    if(ops.includes(value) && calc === '' ||\n        ops.includes(value) && ops.includes(calc.slice(-1))){\n          return;\n        }\n\n    setCalc(calc + value);\n\n    if(!ops.includes(value)){\n      setResult(eval(calc + value).toString());\n    }\n  }\n\n  const createDigits = () => {\n    const digits = [];\n\n    for(let i = 1; i < 10; i++){\n      digits.push(\n        <button onClick={() => updateCalc(i.toString()) } key={i}>{i}</button>\n      )\n    }\n\n    return digits;\n\n  }\n\n  const calculate = () =>{\n    setCalc(eval(calc).toString());\n  }\n\n  const deleteLast = () =>{\n    if(calc === '') return;\n    \n    const value = calc.slice(0 ,-1);\n    setCalc(value);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"calculator\">\n        <div className=\"display\">\n          { result ? <span>({result})</span> : '' }&nbsp;\n          { calc || \"0\"}\n        </div>\n\n        <div className=\"operators\">\n          <button onClick={() => updateCalc('/') }>/</button>\n          <button onClick={() => updateCalc('*') }>*</button>\n          <button onClick={() => updateCalc('+') }>+</button>\n          <button onClick={() => updateCalc('-') }>-</button>\n\n          <button onClick={ deleteLast }>DEL</button>\n        </div>\n\n        <div className=\"digits\">\n          { createDigits() }\n          <button onClick={() => updateCalc('0') }>0</button>\n          <button onClick={() => updateCalc('.') }>.</button>\n          <button onClick={ calculate }>=</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}